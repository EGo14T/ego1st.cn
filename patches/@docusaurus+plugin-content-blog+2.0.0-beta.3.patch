diff --git a/node_modules/@docusaurus/plugin-content-blog/lib/blogUtils.js b/node_modules/@docusaurus/plugin-content-blog/lib/blogUtils.js
index 1f1e031..279ff7f 100644
--- a/node_modules/@docusaurus/plugin-content-blog/lib/blogUtils.js
+++ b/node_modules/@docusaurus/plugin-content-blog/lib/blogUtils.js
@@ -99,7 +99,7 @@ async function generateBlogPosts(contentPaths, { siteConfig, siteDir, i18n }, op
         // Lookup in localized folder in priority
         const blogDirPath = await utils_1.getFolderContainingFile(getContentPathList(contentPaths), blogSourceFile);
         const source = path_1.default.join(blogDirPath, blogSourceFile);
-        const { frontMatter: unsafeFrontMatter, content, contentTitle, excerpt, } = await utils_1.parseMarkdownFile(source, { removeContentTitle: true });
+        const { frontMatter: unsafeFrontMatter, content, contentTitle, excerpt, markdownFileContent } = await utils_1.parseMarkdownFile(source, { removeContentTitle: true });
         const frontMatter = blogFrontMatter_1.validateBlogPostFrontMatter(unsafeFrontMatter);
         const aliasedSource = utils_1.aliasedSitePath(source, siteDir);
         const blogFileName = path_1.default.basename(blogSourceFile);
@@ -156,6 +156,13 @@ async function generateBlogPosts(contentPaths, { siteConfig, siteDir, i18n }, op
                 return undefined;
             }
         }
+
+        const parseMD = markdownFileContent.replace(/\-\-\-\r\n(?:.|\r\n)*\-\-\-\r\n/g, "")
+                                            .replace("<!--truncate-->", "")
+                                            .replace(/\#/g, "")
+                                            .replace(/\s+/g, "");
+        const words = parseMD.length
+
         blogPosts.push({
             id: (_e = frontMatter.slug) !== null && _e !== void 0 ? _e : title,
             metadata: {
@@ -166,6 +173,7 @@ async function generateBlogPosts(contentPaths, { siteConfig, siteDir, i18n }, op
                 description,
                 date,
                 formattedDate,
+                words,
                 tags: (_f = frontMatter.tags) !== null && _f !== void 0 ? _f : [],
                 readingTime: showReadingTime ? reading_time_1.default(content).minutes : undefined,
                 truncated: (truncateMarker === null || truncateMarker === void 0 ? void 0 : truncateMarker.test(content)) || false,
